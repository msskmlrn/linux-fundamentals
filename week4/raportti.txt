Longcat
http://mywiki.wooledge.org/BashFAQ/054
How can I tell whether a variable contains a valid number?

miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ cat longcat.sh 
#!/bin/bash

if ! [[ "$1" != *[!0-9]* && $1 -ne 0 ]]; then
	echo "Error, only positive integers are allowed."
	exit 1;
fi

if [ "$1" -eq 1 ] ; then
	cat "shortcat.txt"
else 	
	head -n10 shortcat.txt #the head portion of the cat is always the same

	#extend the stomach the specified amount
	i="1"

	while [ $i -lt $1 ]
	do
		sed -n 11p shortcat.txt
		((i++))
	done

	head -n17 shortcat.txt | tail -n+11 #print lines 12-17 (the bottom part)
	tail -n1 shortcat.txt | sed -e s/Short/Long/ #replace Short with Long in the text
fi


Daily maximum
miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ ./max-temp.sh ~/Downloads/lost24/monitor/2012.10.11/
32C
/home/miika/Downloads/lost24/monitor/2012.10.11/16:25/hp-temps.txt

miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ ./max-temp.sh ~/Downloads/lost24/monitor/2012.10.*
38C
/home/miika/Downloads/lost24/monitor/2012.10.02/14:45/hp-temps.txt

miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ ./max-temp.sh ~/Downloads/lost24/monitor/*
54C
/home/miika/Downloads/lost24/monitor/2012.04.25/10:50/hp-temps.txt

miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ cat max-temp.sh
#!/bin/bash

max_value=0
max_value_file="null"

for folder in $*
do
	for file in $(find $folder -name '*temps.txt')
	do

	#get the line with PROCESSOR_ZONE information
	#then replace all spaces and backslashes with commas
	#then get the processor temperature
	#then remove the C

		current=$(grep "PROCESSOR_ZONE" $file | sed -e 's: \+:,:g' -e 's:/:,:g' | cut -d ',' -f3 | sed -e 's:C::')
		if [ $max_value -lt $current ]; then
			max_value=$current
			max_value_file=$file
		fi
	done
done
echo ${max_value}C
echo ${max_value_file}


...in TSV format
miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ ./max-temp.sh ~/Downloads/lost24/monitor/2012.10.11/ | ./in-tsv-format.sh
2012.10.1116:25	32

miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ cat in-tsv-format.sh
#!/bin/bash

#2011.07.21 11:05    45

while read line
do
	date="$(echo $line | grep -o "[0-9]\{4\}\.[0-9]\{2\}\.[0-9]\{2\}")"
        time="$(echo $line | grep -o "[0-9]\{2\}:[0-9]\{2\}")"
        temperature="$(echo $line | grep -o "[0-9]*°C$" | sed -e s:°C::)"
	printf "%s%s\t%s\n" "$date" "$time" "$temperature"
done


Daily maximums redux

sort
#`-u'
     For the default case or the `-m' option, only output the first of
     a sequence of lines that compare equal.  For the `-c' option,
     check that no pair of consecutive lines compares equal.

miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ cat daily-maximums-redux.sh
#!/bin/bash

for folder in $(find $1 -name '*temps.txt' | sed -e "s/[0-9]\{2\}\:[0-9]\{2\}.*//g" | sort -u) 
do
	./max-temp.sh $folder
done


miika@miika-desktop:~/Development/git/yliopisto/linux-fundamentals/week4$ ./daily-maximums-redux.sh ~/Downloads/lost24/* | ./in-tsv-format.sh
2011.10.20 15:05	28
2011.10.21 15:05	25
2011.10.22 15:05	28
2011.10.23 20:45	26
2011.10.24 13:45	30
2011.10.25 15:05	29
2011.10.26 15:05	26
2011.10.27 18:10	25
2011.10.28 15:05	25
2011.10.29 15:05	27



